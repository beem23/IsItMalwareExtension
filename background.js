// Helper function to check if a URL is valid
function isValidHttpUrl(string) {
    const regex = /^((https?:\/\/)?(?:[a-z0-9-]+\.)+[a-z0-9]{2,6}(?:\/[^/]*?)*$)/i;
    return regex.test(string);
}

// Placeholder function for getting the result
async function getResult(url) {
    // Your implementation here
    return "ok";
}

// Main event listener
// chrome.tabs.onUpdated.addListener(async (tabId, changeInfo, tab) => {
//     if (changeInfo.status === 'complete' && tab.active) {
//         if (tab.url && tab.url.startsWith("http")) {
//             const url = new URL(tab.url);
//             const baseUrl = url.protocol + "//" + url.hostname;

//             chrome.storage.sync.get("key", async (data) => {
//                 const storedData = data.key || {};

//                 if (!Object.keys(storedData).find((storedURL) => baseUrl.startsWith(storedURL))) {
//                     const result = await getResult(baseUrl); // Use getResult() instead of checkUrlWithProxy()
//                     const currentDate = new Date();
//                     const timestamp = `${currentDate.getFullYear()}-${String(currentDate.getMonth() + 1).padStart(2, "0")}-${String(currentDate.getDate()).padStart(2, "0")}`;

//                     storedData[baseUrl] = {
//                         url: baseUrl,
//                         timestamp: timestamp,
//                         result: result
//                     };

//                     chrome.storage.sync.set({ key: storedData }, () => {
//                         console.log("New entry saved:", baseUrl);
//                     });
//                 }
//             });
//         }
//     }
// });

// Main event listener
chrome.webNavigation.onCompleted.addListener(async ({ tabId, url }) => {
    if (url.startsWith("http")) {
        const parsedUrl = new URL(url);
        const baseUrl = parsedUrl.protocol + "//" + parsedUrl.hostname;

        // Log the base URL when the page is loaded or reloaded
        console.log("Current base URL:", baseUrl);
    }
});

