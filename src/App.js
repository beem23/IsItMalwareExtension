import { useState } from 'react';
import Menu from './Menu'
import './App.css';
import URLList from './URLList';
import Info from './Info'

function App() {
  const [searchText, setSearchText] = useState('');
  const [data, setData] = useState({}); // initialize as empty object
  const [countLoad, setCountLoad] = useState(0);
  const [showInfo, setShowInfo] = useState(false)

  const handleInfoShow = () => {
    setShowInfo(!showInfo);
  }

  const increaseCount = () => {
    setCountLoad(countLoad + 1);
  }

  const handleAddEntry = (newEntry) => {
    chrome.storage.sync.get('key', (items) => {
      const retrievedData = items.key || {}; // set retrievedData to empty object if undefined
      if (newEntry && newEntry.url) { // check if newEntry and newEntry.url are defined
        retrievedData[newEntry.url] = { ...newEntry };
        chrome.storage.sync.set({ key: retrievedData }, () => {
          console.log('Data saved to API:', retrievedData);
        });
      } else {
        console.log('Invalid entry:', newEntry);
      }
    });
  };

  const handleDeleteAll = () => {
    // Set storage API to an empty object
    chrome.storage.sync.set({ key: {} }, () => {
      console.log('Data wiped from API');
    });
  }



  const loadList = () => {
    console.log('In LoadList');
    chrome.storage.sync.get('key', items => {
      const retrievedData = items.key;
      // if (JSON.stringify(data) === JSON.stringify(retrievedData)) {
      //   console.log('Data is the same no need to set');
      //   return;
      // } else {
      console.log('data is set');
      setData(retrievedData);
      // }
    });
  };

  return (
    <div className="App">
      <h1>IsItMalware.io</h1>
      <Menu
        setSearchText={setSearchText}
        searchText={searchText}
        handleAddEntry={handleAddEntry}
        handleDeleteAll={handleDeleteAll}
        loadList={loadList}
        increaseCount={increaseCount}
      />
      <URLList
        searchText={searchText}
        data={data}
        setData={setData}
        loadList={loadList}
        countLoad={countLoad}
      />
      <Info handleInfoShow={handleInfoShow} showInfo={showInfo} />
      {/* <CheckURL /> */}
    </div>
  );
}

export default App;
