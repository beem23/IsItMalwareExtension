function isValidHttpUrl(t){return/^((https?:\/\/)?(?:[a-z0-9-]+\.)+[a-z0-9]{2,6}(?:\/[^/]*?)*$)/i.test(t)}function switchIcon(t,n){if(t){switch(t){case"mal":iconPath={16:"icons/icon-mal-16.png",32:"icons/icon-mal-32.png",48:"icons/icon-mal-48.png",128:"icons/icon-mal-128.png"};break;case"sus":iconPath={16:"icons/icon-sus-16.png",32:"icons/icon-sus-32.png",48:"icons/icon-sus-48.png",128:"icons/icon-sus-128.png"};break;default:iconPath={16:"icons/icon-default-16.png",32:"icons/icon-default-32.png",48:"icons/icon-default-48.png",128:"icons/icon-default-128.png"}}chrome.action.setIcon({path:iconPath,tabId:n})}}async function getResult(t,n){const e=`https://urlproxytesting-production.up.railway.app/?eURL=${btoa(t).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}`;try{const t=await fetch(e),s=await t.json();let a;return s.data.attributes.last_analysis_stats.malicious>0?(a="mal",switchIcon(a,n)):s.data.attributes.last_analysis_stats.suspicious>0?(a="sus",switchIcon(a,n)):(a="ok",switchIcon(a,n)),a}catch(t){return console.error("Error fetching data from proxy server:",t),"error"}}function removeOldEntries(t){const n=new Date,e=new Date(n.getTime()-2592e6);for(let n in t)new Date(t[n].timestamp)<e&&delete t[n]}chrome.webNavigation.onCompleted.addListener((async t=>{const n=t.tabId,e=t.url;if(isValidHttpUrl(e)){const t=new URL(e).origin;chrome.storage.sync.get("key",(async e=>{const s=e.key||{};if(removeOldEntries(s),Object.keys(s).find((n=>t.startsWith(n))))switchIcon(s[t].result,n);else{const e=await getResult(t,n),a=new Date,o=`${a.getFullYear()}-${String(a.getMonth()+1).padStart(2,"0")}-${String(a.getDate()).padStart(2,"0")}`;s[t]={url:t,timestamp:o,result:e},chrome.storage.sync.set({key:s},(()=>{console.log("New entry saved:",t)}))}}))}}));