function isValidHttpUrl(t){return/^((https?:\/\/)?(?:[a-z0-9-]+\.)+[a-z0-9]{2,6}(?:\/[^/]*?)*$)/i.test(t)}async function getResult(t){const e=`https://urlproxytesting-production.up.railway.app/?eURL=${btoa(t).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}`;try{const t=await fetch(e),a=await t.json();let s;return s=a.data.attributes.last_analysis_stats.malicious>0?"mal":a.data.attributes.last_analysis_stats.suspicious>0?"sus":"ok",s}catch(t){return console.error("Error fetching data from proxy server:",t),"error"}}chrome.webNavigation.onCompleted.addListener((async t=>{t.tabId;const e=t.url;if(isValidHttpUrl(e)){const t=new URL(e).origin;chrome.storage.sync.get("key",(async e=>{const a=e.key||{};if(!Object.keys(a).find((e=>t.startsWith(e)))){const e=await getResult(t),s=new Date,r=`${s.getFullYear()}-${String(s.getMonth()+1).padStart(2,"0")}-${String(s.getDate()).padStart(2,"0")}`;a[t]={url:t,timestamp:r,result:e},chrome.storage.sync.set({key:a},(()=>{console.log("New entry saved:",t)}))}}))}}));